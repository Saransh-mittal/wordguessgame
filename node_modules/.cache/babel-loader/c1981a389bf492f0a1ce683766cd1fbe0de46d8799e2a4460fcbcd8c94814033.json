{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saransh\\\\Desktop\\\\reactPrac\\\\wordguess\\\\src\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  let words = ['php', 'java', 'python', 'c++', 'qbasic', 'javascript', 'css', 'html'];\n  const [buttonWord, setButtonWord] = useState(\"Click To Start\");\n  const [newW, setNewW] = useState(\"\");\n  const [randomW, setRandomW] = useState(\"\");\n  const changeButton = () => {\n    if (buttonWord === \"Click To Start\") {\n      const idx = Math.floor(Math.random() * words.length);\n      const word = words[idx];\n      setNewW(word);\n      setButtonWord(\"Guess\");\n    }\n    // else if(buttonWord===\"Start\") setButtonWord(\"Guess\");\n  };\n\n  const checker = () => {\n    console.log(newW);\n    return newW;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-emerald-300 h-[85vh] flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-emerald-500 h-[45vh] w-[50%] rounded-md shadow-lg shadow-slate-600/50 flex flex-col justify-center items-center gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: [\"Guess the word: \", checker]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \" Wrong. Please guess again: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \" Nice!! correct Answer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"bg-slate-200 h-12 rounded-3xl outline-0 px-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeButton,\n          className: \"bg-white h-12 min-w-[18%] rounded-md text-base uppercase font-medium text-red-600\",\n          children: buttonWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Game, \"Jk6laRz/v6QFGR5X+r3SOxOX/Jg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","words","buttonWord","setButtonWord","newW","setNewW","randomW","setRandomW","changeButton","idx","Math","floor","random","length","word","checker","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Saransh/Desktop/reactPrac/wordguess/src/Game.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Game = () => {\r\n  let words = ['php','java','python','c++','qbasic','javascript','css','html'];\r\n  const [buttonWord,setButtonWord] = useState(\"Click To Start\");\r\n  const [newW,setNewW] = useState(\"\");\r\n  const [randomW,setRandomW] = useState(\"\");\r\n  const changeButton = () =>{\r\n    if(buttonWord===\"Click To Start\") {\r\n      const idx = Math.floor(Math.random()*(words.length));\r\n      const word = words[idx];\r\n      setNewW(word);\r\n      setButtonWord(\"Guess\");\r\n    }\r\n    // else if(buttonWord===\"Start\") setButtonWord(\"Guess\");\r\n  };\r\n  const checker = () =>{\r\n    console.log(newW);\r\n    return newW;\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"bg-emerald-300 h-[85vh] flex justify-center items-center\">\r\n        <div className=\"bg-emerald-500 h-[45vh] w-[50%] rounded-md shadow-lg shadow-slate-600/50 flex flex-col justify-center items-center gap-6\">\r\n          \r\n            <h3 className=\"text-xl font-bold\">Guess the word: {checker}</h3>\r\n            <h3 className=\"text-xl font-bold\"> Wrong. Please guess again: </h3>\r\n            <h3 className=\"text-xl font-bold\"> Nice!! correct Answer </h3>\r\n\r\n          \r\n            <input className=\"bg-slate-200 h-12 rounded-3xl outline-0 px-5\"></input>\r\n          \r\n          <button\r\n            onClick={changeButton}\r\n            className=\"bg-white h-12 min-w-[18%] rounded-md text-base uppercase font-medium text-red-600\"\r\n          >\r\n          {buttonWord}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,IAAIC,KAAK,GAAG,CAAC,KAAK,EAAC,MAAM,EAAC,QAAQ,EAAC,KAAK,EAAC,QAAQ,EAAC,YAAY,EAAC,KAAK,EAAC,MAAM,CAAC;EAC5E,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,CAAC,gBAAgB,CAAC;EAC7D,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACY,OAAO,EAACC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMc,YAAY,GAAGA,CAAA,KAAK;IACxB,IAAGN,UAAU,KAAG,gBAAgB,EAAE;MAChC,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAEX,KAAK,CAACY,MAAO,CAAC;MACpD,MAAMC,IAAI,GAAGb,KAAK,CAACQ,GAAG,CAAC;MACvBJ,OAAO,CAACS,IAAI,CAAC;MACbX,aAAa,CAAC,OAAO,CAAC;IACxB;IACA;EACF,CAAC;;EACD,MAAMY,OAAO,GAAGA,CAAA,KAAK;IACnBC,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC;EACD,oBACER,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,0DAA0D;MAAAD,QAAA,eACvEtB,OAAA;QAAKuB,SAAS,EAAC,0HAA0H;QAAAD,QAAA,gBAErItB,OAAA;UAAIuB,SAAS,EAAC,mBAAmB;UAAAD,QAAA,GAAC,kBAAgB,EAACH,OAAO;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAChE3B,OAAA;UAAIuB,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAAC;QAA4B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACnE3B,OAAA;UAAIuB,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAAC;QAAuB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAG9D3B,OAAA;UAAOuB,SAAS,EAAC;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAE1E3B,OAAA;UACE4B,OAAO,EAAEhB,YAAa;UACtBW,SAAS,EAAC,mFAAmF;UAAAD,QAAA,EAE9FhB;QAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAACvB,EAAA,CAxCID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}